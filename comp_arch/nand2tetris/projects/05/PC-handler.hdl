CHIP PC-handler{
    IN  Cinstruction[16],
        zr,
        ng;
    OUT out;


    PARTS: 
    Not(in=ng, out=notng);
    Not(in=zr, out=notzr);
    And(a=notng, b=notzr, out=notneg);
    And(a=Cinstruction[0], b=notneg, out=l1);
    //jump if n=0
    And(a=Cinstruction[1], b=zr, out=l2);
    //jump if n>=0
    And(a=Cinstruction[0], b=Cinstruction[1], out=firstsecond);
    And(a=firstsecond, b=notng, out=l3);
    //jump if n<0
    And(a=Cinstruction[2], b=ng, out=l4);
    //jump if n!=0
    And(a=Cinstruction[0], b=Cinstruction[2], out=firstthird);
    And(a=firstthird, b=notzr, out=l5);
    //jump if n<=0
    And(a=Cinstruction[2], b=Cinstruction[1], out=secondthird);
    Or(a=ng, b=zr, out=notpositive);
    And(a=secondthird, b=notpositive, out=l6);
    //jump
    And(a=firstsecond, b=secondthird, out=l7);
    Or8Way(in[0]=false, in[1]=l1, in[2]=l2, in[3]=l3, in[4]=l4, in[5]=l5, in[6]=l6, in[7]=l7, out=out);

    }
